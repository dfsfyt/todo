{"ast":null,"code":"var _jsxFileName = \"/Users/venus/Downloads/Code/todo/src/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Alert } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [listData, setListData] = useState([{\n    id: '001',\n    name: '初始数据1',\n    checked: false\n  }, {\n    id: '002',\n    name: '初始数据2',\n    checked: true\n  }, {\n    id: '003',\n    name: '初始数据3',\n    checked: false\n  }]);\n  const [cacheData, setCacheData] = useState([]);\n  const notDoneCount = listData.filter(item => !item.checked).length;\n  const handleAddTodo = value => {\n    const id = Date.now().toString();\n    const newValue = {\n      id,\n      name: value,\n      checked: false\n    };\n    const data = [{\n      id,\n      name: value,\n      checked: false\n    }, ...listData];\n    const doneCount = data.filter(item => item.checked).length;\n    setListData(data);\n  };\n  useEffect(() => {\n    if (!notDoneCount) {\n      setTimeout(() => {\n        setShowAlert(false);\n      });\n    }\n  }, [notDoneCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [!notDoneCount ? /*#__PURE__*/_jsxDEV(Alert, {\n      icon: /*#__PURE__*/_jsxDEV(CheckIcon, {\n        fontSize: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 38\n      }, this),\n      severity: \"info\",\n      children: \"All Active Completed !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(TodoInput, {\n      onEnter: value => handleAddTodo(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: listData,\n      handleDone: id => {\n        const newListData = listData.map(item => {\n          if (item.id === id) {\n            item.checked = true;\n          }\n          return item;\n        });\n        setListData(newListData);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [notDoneCount.toString(), \" items left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          if (!notDoneCount) {\n            setCacheData(listData);\n            const newListData = listData.filter(item => !item.checked);\n            setListData(newListData);\n          } else {\n            setListData(cacheData);\n          }\n        },\n        children: !notDoneCount ? \"Clear Completed\" : \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 6\n  }, this);\n};\n_s(Index, \"pg1SOLy5uimFk/+qS4rzmz5Cghw=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useEffect","useState","Button","Alert","CheckIcon","TodoInput","TodoList","jsxDEV","_jsxDEV","Index","_s","listData","setListData","id","name","checked","cacheData","setCacheData","notDoneCount","filter","item","length","handleAddTodo","value","Date","now","toString","newValue","data","doneCount","setTimeout","setShowAlert","className","children","icon","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","severity","onEnter","todos","handleDone","newListData","map","onClick","_c","$RefreshReg$"],"sources":["/Users/venus/Downloads/Code/todo/src/todo/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Button, Alert} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport { ToDoItemProps } from './index.d';\nimport './index.css';\n\nconst Index = () => {\n    const [listData, setListData] = useState<ToDoItemProps[]>([\n        {\n            id: '001',\n            name: '初始数据1',\n            checked: false\n        }, {\n            id: '002',\n            name: '初始数据2',\n            checked: true\n        }, {\n            id: '003',\n            name: '初始数据3',\n            checked: false\n        }\n    ]);\n    const [cacheData, setCacheData] = useState<ToDoItemProps[]>([]);\n  const notDoneCount = listData.filter(item => !item.checked).length;\n  const handleAddTodo = (value: string) => {\n    const id = Date.now().toString();\n    const newValue = {\n      id,\n      name: value,\n      checked: false\n    }\n    const data = [\n      {\n        id,\n        name: value,\n        checked: false\n      },\n      ...listData\n    ]\n    const doneCount = data.filter(item => item.checked).length;\n    setListData(data);\n  }\n  useEffect(() => {\n    if(!notDoneCount) {\n      setTimeout(() => {\n        setShowAlert(false);\n      })\n    }\n  }, [notDoneCount])\n  return (\n     <div className='wrap'>\n      {\n        !notDoneCount ? <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"info\">\n        All Active Completed !\n  </Alert>:null\n      }\n      \n    <TodoInput onEnter={(value: string) => handleAddTodo(value)} />\n    <TodoList todos={listData} handleDone={(id: string) => {\n\n      const newListData = listData.map(item => {\n        if(item.id === id) {\n          item.checked = true;\n        }\n        return item;\n      })\n  \n      setListData(newListData);\n    }} />\n    <div className='info'>\n        <div>{notDoneCount.toString()} items left</div>\n        \n        \n        <Button onClick={() => {\n          if(!notDoneCount) {\n            setCacheData(listData);\n            const newListData = listData.filter(item  => !item.checked);\n            setListData(newListData);\n          } else {\n            setListData(cacheData);\n          }\n        }}>{!notDoneCount ? \"Clear Completed\" : \"Show All\"}</Button>\n        </div>\n</div> \n  );\n}\n\nexport default Index;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}