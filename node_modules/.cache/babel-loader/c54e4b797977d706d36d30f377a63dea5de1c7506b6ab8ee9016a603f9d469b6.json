{"ast":null,"code":"var _jsxFileName = \"/Users/venus/Downloads/Code/todo/src/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Alert } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [listData, setListData] = useState([{\n    id: '001',\n    name: '初始数据1',\n    checked: false\n  }, {\n    id: '002',\n    name: '初始数据2',\n    checked: true\n  }, {\n    id: '003',\n    name: '初始数据3',\n    checked: false\n  }]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [allDone, setAllDone] = useState(false);\n  const [showAll, setShowAll] = useState(true);\n  const notDoneCount = listData.filter(item => !item.checked).length;\n  const handleAddTodo = value => {\n    const id = Date.now().toString();\n    const data = [{\n      id,\n      name: value,\n      checked: false\n    }, ...listData];\n    setAllDone(false);\n    setListData(data);\n  };\n  useEffect(() => {\n    if (allDone) {\n      setTimeout(() => {\n        setShowAlert(false);\n      }, 3000);\n    }\n  }, [allDone]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [allDone && showAlert ? /*#__PURE__*/_jsxDEV(Alert, {\n      sx: {\n        marginBottom: '10px'\n      },\n      icon: /*#__PURE__*/_jsxDEV(CheckIcon, {\n        fontSize: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 73\n      }, this),\n      severity: \"info\",\n      children: \"All Active Completed !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }, this) : null, /*#__PURE__*/_jsxDEV(TodoInput, {\n      onEnter: value => handleAddTodo(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: !showAll ? listData.filter(item => !item.checked) : listData,\n      handleDone: id => {\n        const newListData = listData.map(item => {\n          if (item.id === id) {\n            item.checked = true;\n          }\n          return item;\n        });\n        const doneCount = newListData.filter(item => item.checked).length;\n        const isAll = doneCount === newListData.length;\n        if (isAll) {\n          setShowAlert(true);\n        }\n        setAllDone(isAll);\n        setListData(newListData);\n      },\n      handleDelete: id => {\n        const newListData = listData.filter;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [notDoneCount.toString(), \" items left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setShowAll(!showAll);\n        },\n        children: showAll ? \"Clear Completed\" : \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 6\n  }, this);\n};\n_s(Index, \"hdhIQi9XgL74ME59wQIijFNcHZM=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useEffect","useState","Button","Alert","CheckIcon","TodoInput","TodoList","jsxDEV","_jsxDEV","Index","_s","listData","setListData","id","name","checked","showAlert","setShowAlert","allDone","setAllDone","showAll","setShowAll","notDoneCount","filter","item","length","handleAddTodo","value","Date","now","toString","data","setTimeout","className","children","sx","marginBottom","icon","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","severity","onEnter","todos","handleDone","newListData","map","doneCount","isAll","handleDelete","onClick","_c","$RefreshReg$"],"sources":["/Users/venus/Downloads/Code/todo/src/todo/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Button, Alert} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport { ToDoItemProps } from './index.d';\nimport './index.css';\n\nconst Index = () => {\n    const [listData, setListData] = useState<ToDoItemProps[]>([\n        {\n            id: '001',\n            name: '初始数据1',\n            checked: false\n        }, {\n            id: '002',\n            name: '初始数据2',\n            checked: true\n        }, {\n            id: '003',\n            name: '初始数据3',\n            checked: false\n        }\n    ]);\n    const [showAlert, setShowAlert] = useState<Boolean>(false);\n    const [allDone, setAllDone] = useState<Boolean>(false);\n    const [showAll, setShowAll] = useState<Boolean>(true);\n  const notDoneCount = listData.filter(item => !item.checked).length;\n  const handleAddTodo = (value: string) => {\n    const id = Date.now().toString();\n    const data = [\n      {\n        id,\n        name: value,\n        checked: false\n      },\n      ...listData\n    ]\n    setAllDone(false);\n    setListData(data);\n  }\n  useEffect(() => {\n    if(allDone) {\n      setTimeout(() => {\n        setShowAlert(false);\n      }, 3000)\n    }\n  }, [allDone])\n  return (\n     <div className='wrap'>\n      {\n        allDone && showAlert ? <Alert sx={{marginBottom: '10px'}} icon={<CheckIcon fontSize=\"inherit\" />} severity=\"info\">\n        All Active Completed !\n  </Alert>:null\n      }\n      \n    <TodoInput onEnter={(value: string) => handleAddTodo(value)} />\n    <TodoList todos={!showAll ? listData.filter(item => !item.checked) : listData} handleDone={(id: string) => {\n\n      const newListData = listData.map(item => {\n        if(item.id === id) {\n          item.checked = true;\n        }\n        return item;\n      })\n      const doneCount = newListData.filter(item => item.checked).length;\n      \n      const isAll = doneCount === newListData.length;\n      if(isAll) {\n        setShowAlert(true);\n      }\n      setAllDone(isAll);\n      \n      setListData(newListData);\n    }} \n    \n    handleDelete={(id: string) => {\n      const newListData = listData.filter\n    }}\n    />\n    <div className='info'>\n        <div>{notDoneCount.toString()} items left</div>\n        \n        \n        <Button onClick={() => {\n          setShowAll(!showAll);\n        }}>{showAll ? \"Clear Completed\" : \"Show All\"}</Button>\n        </div>\n</div> \n  );\n}\n\nexport default Index;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}