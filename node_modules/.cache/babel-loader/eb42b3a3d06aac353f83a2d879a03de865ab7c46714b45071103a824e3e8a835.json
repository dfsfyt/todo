{"ast":null,"code":"var _jsxFileName = \"/Users/venus/Downloads/Code/todo/src/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Alert } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [listData, setListData] = useState([{\n    id: '001',\n    name: '初始数据1',\n    checked: false\n  }, {\n    id: '002',\n    name: '初始数据2',\n    checked: true\n  }, {\n    id: '003',\n    name: '初始数据3',\n    checked: false\n  }]);\n  const [cacheData, setCacheData] = useState([]);\n  const [isAll, setIsAll] = useState(true);\n  const notDoneCount = listData.filter(item => !item.checked).length;\n  const handleAddTodo = value => {\n    const id = Date.now().toString();\n    const newValue = {\n      id,\n      name: value,\n      checked: false\n    };\n    const data = [{\n      id,\n      name: value,\n      checked: false\n    }, ...listData];\n    const doneCount = data.filter(item => item.checked).length;\n    if (doneCount === data.length) {}\n    setListData(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      icon: /*#__PURE__*/_jsxDEV(CheckIcon, {\n        fontSize: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this),\n      severity: \"success\",\n      children: \"All Active Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoInput, {\n      onEnter: value => handleAddTodo(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: listData,\n      handleDone: id => {\n        const newListData = listData.map(item => {\n          if (item.id === id) {\n            item.checked = true;\n          }\n          return item;\n        });\n        setListData(newListData);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [notDoneCount.toString(), \" items left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !notDoneCount ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"All Active Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          if (isAll) {\n            setCacheData(listData);\n            const newListData = listData.filter(item => !item.checked);\n            setListData(newListData);\n            setIsAll(false);\n          } else {\n            setListData(cacheData);\n            setIsAll(true);\n          }\n        },\n        children: isAll ? \"Clear Completed\" : \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 6\n  }, this);\n};\n_s(Index, \"2Xiir1Q17340kuBn/fYXeTv7mko=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","Button","Alert","CheckIcon","TodoInput","TodoList","jsxDEV","_jsxDEV","Index","_s","listData","setListData","id","name","checked","cacheData","setCacheData","isAll","setIsAll","notDoneCount","filter","item","length","handleAddTodo","value","Date","now","toString","newValue","data","doneCount","className","children","icon","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","severity","onEnter","todos","handleDone","newListData","map","onClick","_c","$RefreshReg$"],"sources":["/Users/venus/Downloads/Code/todo/src/todo/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {Button, Alert} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport { ToDoItemProps } from './index.d';\nimport './index.css';\n\nconst Index = () => {\n    const [listData, setListData] = useState<ToDoItemProps[]>([\n        {\n            id: '001',\n            name: '初始数据1',\n            checked: false\n        }, {\n            id: '002',\n            name: '初始数据2',\n            checked: true\n        }, {\n            id: '003',\n            name: '初始数据3',\n            checked: false\n        }\n    ]);\n    const [cacheData, setCacheData] = useState<ToDoItemProps[]>([]);\n    const [isAll, setIsAll] = useState<Boolean>(true);\n  const notDoneCount = listData.filter(item => !item.checked).length;\n  const handleAddTodo = (value: string) => {\n    const id = Date.now().toString();\n    const newValue = {\n      id,\n      name: value,\n      checked: false\n    }\n    const data = [\n      {\n        id,\n        name: value,\n        checked: false\n      },\n      ...listData\n    ]\n    const doneCount = data.filter(item => item.checked).length;\n    if(doneCount === data.length) {\n\n    }\n    setListData(data);\n  }\n  return (\n     <div className='wrap'>\n      <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\">\n          All Active Completed\n    </Alert>\n    <TodoInput onEnter={(value: string) => handleAddTodo(value)} />\n    <TodoList todos={listData} handleDone={(id: string) => {\n\n      const newListData = listData.map(item => {\n        if(item.id === id) {\n          item.checked = true;\n        }\n        return item;\n      })\n  \n      setListData(newListData);\n    }} />\n    <div className='info'>\n        <div>{notDoneCount.toString()} items left</div>\n        <div>\n        {\n          !notDoneCount ? <div>All Active Completed</div> : null\n        }\n        </div>\n        \n        \n        <Button onClick={() => {\n          if(isAll) {\n            setCacheData(listData);\n            const newListData = listData.filter(item  => !item.checked);\n            setListData(newListData);\n            setIsAll(false);\n          } else {\n            setListData(cacheData);\n            setIsAll(true);\n          }\n        }}>{isAll ? \"Clear Completed\" : \"Show All\"}</Button>\n        </div>\n</div> \n  );\n}\n\nexport default Index;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}