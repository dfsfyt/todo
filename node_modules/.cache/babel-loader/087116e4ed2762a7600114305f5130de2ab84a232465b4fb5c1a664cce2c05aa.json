{"ast":null,"code":"var _jsxFileName = \"/Users/b.3.c.3.-7575/Desktop/dfsfyt/todo/src/todo/TodoList.tsx\";\nimport React from 'react';\nimport { List, ListItem, ListItemButton, ListItemIcon, ListItemText, Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = props => {\n  const {\n    todos,\n    handleDone\n  } = props;\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"list\",\n    dense: true,\n    sx: {\n      marginTop: 3\n    },\n    children: todos.map(item => {\n      const itemId = item.id;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          role: undefined,\n          onClick: () => handleDone(itemId),\n          dense: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: item.checked,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': itemId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: itemId,\n            primary: item.checked ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"done\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 63\n            }, this) : item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, itemId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Checkbox","jsxDEV","_jsxDEV","TodoList","props","todos","handleDone","className","dense","sx","marginTop","children","map","item","itemId","id","disablePadding","role","undefined","onClick","edge","checked","tabIndex","disableRipple","inputProps","fileName","_jsxFileName","lineNumber","columnNumber","primary","name","_c","$RefreshReg$"],"sources":["/Users/b.3.c.3.-7575/Desktop/dfsfyt/todo/src/todo/TodoList.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport {List, ListItem, ListItemButton, ListItemIcon, ListItemText, Checkbox} from '@mui/material';\nimport { ToDoItemProps } from './index.d';\n\ninterface TodoListProps {\n    todos: ToDoItemProps[];\n    handleDone: Function\n}\nconst TodoList = (props: TodoListProps) => {\n    const {todos, handleDone} = props;\n    return  <List className=\"list\" dense sx={{marginTop: 3}}>\n    {todos.map((item: ToDoItemProps) => {\n      const itemId = item.id;\n\n      return (\n        <ListItem\n          key={itemId}\n          disablePadding\n        >\n          <ListItemButton role={undefined} onClick={() => handleDone(itemId)} dense>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={item.checked}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': itemId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={itemId} primary={item.checked ? <span className=\"done\">{item.name}</span> : item.name} />\n          </ListItemButton>\n        </ListItem>\n      );\n    })}\n  </List>\n}\n\nexport default TodoList;"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AAEvC,SAAQC,IAAI,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,YAAY,EAAEC,YAAY,EAAEC,QAAQ,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnG,MAAMC,QAAQ,GAAIC,KAAoB,IAAK;EACvC,MAAM;IAACC,KAAK;IAAEC;EAAU,CAAC,GAAGF,KAAK;EACjC,oBAAQF,OAAA,CAACP,IAAI;IAACY,SAAS,EAAC,MAAM;IAACC,KAAK;IAACC,EAAE,EAAE;MAACC,SAAS,EAAE;IAAC,CAAE;IAAAC,QAAA,EACvDN,KAAK,CAACO,GAAG,CAAEC,IAAmB,IAAK;MAClC,MAAMC,MAAM,GAAGD,IAAI,CAACE,EAAE;MAEtB,oBACEb,OAAA,CAACN,QAAQ;QAEPoB,cAAc;QAAAL,QAAA,eAEdT,OAAA,CAACL,cAAc;UAACoB,IAAI,EAAEC,SAAU;UAACC,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAACQ,MAAM,CAAE;UAACN,KAAK;UAAAG,QAAA,gBACvET,OAAA,CAACJ,YAAY;YAAAa,QAAA,eACXT,OAAA,CAACF,QAAQ;cACPoB,IAAI,EAAC,OAAO;cACZC,OAAO,EAAER,IAAI,CAACQ,OAAQ;cACtBC,QAAQ,EAAE,CAAC,CAAE;cACbC,aAAa;cACbC,UAAU,EAAE;gBAAE,iBAAiB,EAAEV;cAAO;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CAAC,eACf1B,OAAA,CAACH,YAAY;YAACgB,EAAE,EAAED,MAAO;YAACe,OAAO,EAAEhB,IAAI,CAACQ,OAAO,gBAAGnB,OAAA;cAAMK,SAAS,EAAC,MAAM;cAAAI,QAAA,EAAEE,IAAI,CAACiB;YAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,GAAGf,IAAI,CAACiB;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7F;MAAC,GAdZd,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeH,CAAC;IAEf,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AACT,CAAC;AAAAG,EAAA,GA3BK5B,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}